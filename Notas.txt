GULP Y SASS

1. Se crea y diligencia el archivo package.json con: npm init
2. Se crea el archivo: gulpfile.js el cual contiene toda la configuraci贸n que requerimos
3. instalamos gulp: npm install --save-dev gulp (Asi requerimos gulp solo en desarrollo, no para producci贸n)
    - con esto se crea la carpeta de node_modules con todas las dependencias de node.js y el archivo
    package-lock.json el cual nunca se debe modificar (por eso tiene -lock)

4. instalamos para compilar SASS : npm install --save-dev gulp-sass
    Nota: se debe instalar previamente en global gulp cli.  npm i gulp cli.
5. En gulpjs.com se encuentran todos los plugins que se necesitan para cada tipo de proyecto
    Nota: Se usa : REQUIRE para importar dependencias de la carpeta node_modules
                 : EXPORTS para exportar y hacer disponible nustro codigo de forma externa.

6. Se abre el archivo de gulp y ahora se pone la funcionalidad requeriendo primero gulp
const { series } = require('gulp');

{series} lo que hace es ejecutar varias funciones al mismo tiempo en serie

7. la ventaja de gulp es la automatizaci贸n de las tareas en el archivo de gulpfile.js

8. Un mixin es exclusivo de sass para darle dinamismo creando bloques de codigo para reutilizar
siguen las mismas reglas de JS
@nombreDeMixin {
    ATRIBUTOS CSS
}

Nota: La etiqueta video contiene los atributos: 
    - controls para reproducir el video por click.
    - autoplay para que inicie solo.
    - muted reproduce el video sin sonido. (esto es requerimiento de CHROME)
    - loop hace que se auto reproduzca solo siempre.

    Se definen varios tipos de video, en caso que el navegador no lo reproduzca.

        <video controls autoplay muted loop>
            <source src="video/rock-band.mp4" type="video/mp4"> <!-- EN CASO QUE NO SOPORTE -->
            <source src="video/concierto.ogg" type="video/ogg">
            <source src="video/concierto.webm" type="video/webm">
        </video>

8. para hacer las imagenes mas livianas se puede usar la suguiente dependencia de gulp:

npm install --save-dev gulp-imagemin@7.0.0  (esta es la versi贸n anterior, ya qye con la 8.0 no funciona)

function imagenes() {
    return src("src/img/**/*")
    .pipe(imagemin())
    .pipe(dest("./build/img"));
  }
Esto cambia las rutas de las imagenes hacia la carpeta build, lo que hace que se tengan que cambiar en el html por las mas livianas

El archivo que no tiene el _ al inicio (app.scss) es donde se van a compilar los datos.


Con la propiedad odd hacemos que el bloque aplique los cambios en los numero impares 1, 3, 5.

.bg-verde .calendario li:nth-child(odd) {
    background-color: darken($verde, 10);
}

document.addEventListener("DOMContentLoaded", function () {
    crearGaleria();
})

function crearGaleria (){
    const galeria = document.querySelector(".galeria-imagenes");

    for (let i = 1; i <= 12; i++) {

        //Primero se crea la imagen
        const imagen = document.createElement ("IMG");
        imagen.src = `build/img/thumb/${i}.webp`;    // SE DEBEN USAR COMILLAS INVERTIDAS ALT + 96 

        //para verificar en la consola
            //console.log(imagen);

        // Despues agrego el li
        const lista = document.createElement ("LI");

        // Y en el li agregamos la imagen
        lista.appendChild(imagen);
        
        //por ultimo agregamos los li a la galeria
        galeria.appendChild(lista);
    }
}